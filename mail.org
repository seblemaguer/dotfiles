#+TITLE: Mail Configuration
#+AUTHOR: SÃ©bastien Le Maguer
#+EMAIL: lemagues@surface
#+DATE: 19 June 2021
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE:  fr
#+OPTIONS:   H:3 num:t toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://seblemaguer.github.io/css/main.css" />
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="default.css" />

* Utils
#+begin_src python :tangle ~/.get_passwd.py
  #!/usr/bin/python3
  # -*- coding: utf-8 -*-

  import pathlib
  import sys
  import keepassxc_proxy_client
  import keepassxc_proxy_client.protocol

  NAME = "getpasswd"
  KEEPASS_CACHE = pathlib.Path.home()/".cache/keepass_key"

  # debug
  if __name__ == "__main__":

      # Connect to the database
      connection = keepassxc_proxy_client.protocol.Connection()
      connection.connect()

      # Authenticate the app
      if KEEPASS_CACHE.exists():
          with open(KEEPASS_CACHE, "rb") as f_key:
              public_key = f_key.read(32)  # NOTE: the key is supposed to be 32 bytes
          connection.load_associate(NAME, public_key)
      else:
          connection.associate()
          _, public_key = connection.dump_associate()
          with open(KEEPASS_CACHE, "wb") as f_key:
              f_key.write(public_key)

      # Test the connection
      if not connection.test_associate():
          raise Exception("association failed")

      # Retrieve the info
      con = connection.get_logins(sys.argv[1])
      for elt in con:
          if elt["login"] == sys.argv[2]:
              print(elt["password"])
              break
#+end_src

* COMMENT some extra configuration
