#+TITLE: Mail Configuration
#+AUTHOR: SÃ©bastien Le Maguer
#+EMAIL: lemagues@surface
#+DATE: 19 June 2021
#+DESCRIPTION:
#+KEYWORDS:
#+LANGUAGE:  fr
#+OPTIONS:   H:3 num:t toc:t \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="https://seblemaguer.github.io/css/main.css" />
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="default.css" />

* Utils
#+begin_src python :tangle ~/.get_passwd.py
  #!/usr/bin/python3
  # -*- coding: utf-8 -*-

  import os
  import sys
  import io
  import logging
  from sys import platform as _platform
  from subprocess import check_output

  GPG_PROG = "/usr/bin/gpg"

  def decrypt(filename):
      # # Load encrypted data
      # f = open(os.path.expanduser(authinfo), "rb")
      # encrypted_data = f.read()
      # f.close()

      # binary = GPG_PROG
      # homedir = os.getenv("HOME") + "/.gnupg/"
      # with open(os.path.expanduser(authinfo), "rb") as f:
      #     decrypted_data = gnupg.GPG(binary=binary, homedir=homedir).decrypt(f.read())
      with open(os.devnull, 'w') as devnull:
          return check_output("%s -dq %s" % (GPG_PROG, filename), shell=True, stderr=devnull).decode("utf-8")

  def contains(d, m):
      '''Return True if d contains all items of m.'''
      for k in m:
          if not k in d or d[k] != m[k]:
              return False
      return True

  def getnetrc(authinfo=None, **match):
      '''A dumb filter for ~/.netrc.gpg. It understands oneline entries,
      comments and default entry. No macros or multiline entries.

      Return first matching dict or None.'''
      default = None
      if not authinfo:
          authinfo = os.getenv('NETRC') or '~/.authinfo.gpg'

      # Decrypt
      decrypted_data = decrypt(os.path.expanduser(authinfo))
      # logging.debug(decrypted_data)
      # Extracting informations
      for li in str(decrypted_data).split("\n"):
          li = li.split() # current line in list
          if not li:
              continue
          if li[0] == 'default':
              default = dict(zip(li[1:-1:2], li[2::2]))
              continue
          elif li[0] == 'macdef':
              continue

          li = dict(zip(li[:-1:2], li[1::2])) # current line in dict
          if match and contains(li, match):
              return li

      if default and contains(default, match):
          return default

  # debug
  if __name__ == "__main__":
      print(getnetrc(machine=sys.argv[1], login=sys.argv[2])['password'])
#+end_src

* mbsync
#+begin_src conf :tangle "~/.mbsyncrc"
  ##########################################################################
  ####
  #### To archive a maildir => just comment the corresponding conf. on this file
  ####
  ##########################################################################

  # Fsync no
  CopyArrivalDate yes # Force the date base on the file date when push
  Create Near
  Sync All
  Expunge Both
  SyncState *


  ##########################################################################
  # Gmail bulk
  ##########################################################################
  IMAPAccount HikoGmail
  Host imap.gmail.com
  User hikoseb@gmail.com
  PassCmd "python3 ~/.get_passwd.py 'imap.gmail.com' 'hikoseb@gmail.com'"
  Port 993
  SSLType IMAPS
  # CertificateFile /etc/ssl/certs/ca-bundle.crt

  IMAPStore HikoGmail-remote
  Account HikoGmail

  MaildirStore HikoGmail-local
  Path ~/mail/HikoGmail/
  Inbox ~/mail/HikoGmail/INBOX
  SubFolders Legacy

  Channel HikoGmail-inbox
  Far :HikoGmail-remote:
  Near :HikoGmail-local:
  Patterns "INBOX" "Deleted Items"

  Channel HikoGmail-sent
  Far :HikoGmail-remote:"[Gmail]/Messages envoy&AOk-s"
  Near :HikoGmail-local:"Sent"

  Group HikoGmail
  Channel HikoGmail-inbox
  Channel HikoGmail-sent


  ##########################################################################
  # Gmail normal
  ##########################################################################
  IMAPAccount SebGmail
  Host imap.gmail.com
  User seb.lemaguer@gmail.com
  PassCmd "python3 ~/.get_passwd.py 'imap.gmail.com' 'seb.lemaguer@gmail.com'"
  SSLType IMAPS
  # CertificateFile /etc/ssl/certs/ca-bundle.crt

  IMAPStore SebGmail-remote
  Account SebGmail

  MaildirStore SebGmail-local
  Path ~/mail/SebGmail/
  Inbox ~/mail/SebGmail/INBOX

  Channel SebGmail-inbox
  Far :SebGmail-remote:
  Near :SebGmail-local:
  Patterns "INBOX"

  Channel SebGmail-sent
  Far :SebGmail-remote:"[Gmail]/Messages envoy&AOk-s"
  Near :SebGmail-local:"Sent"

  Group SebGmail
  Channel SebGmail-inbox
  Channel SebGmail-sent


  # ======================================================================================
  # ======================================================================================
  # ======================================================================================


  ##########################################################################
  # Gmail adapt
  ##########################################################################
  IMAPAccount AdaptGmail
  Host imap.gmail.com
  User sebastien.lemaguer@adaptcentre.ie
  PassCmd "python3 ~/.get_passwd.py 'imap.gmail.com' 'sebastien.lemaguer@adaptcentre.ie'"
  SSLType IMAPS
  AuthMechs LOGIN

  IMAPStore AdaptGmail-remote
  Account AdaptGmail

  MaildirStore AdaptGmail-local
  Path ~/mail/AdaptGmail/
  Inbox ~/mail/AdaptGmail/INBOX

  Channel AdaptGmail-inbox
  Far :AdaptGmail-remote:
  Near :AdaptGmail-local:
  Patterns "INBOX"

  Channel AdaptGmail-sent
  Far :AdaptGmail-remote:"[Gmail]/Sent Mail"
  Near :AdaptGmail-local:sent

  Channel AdaptGmail-trash
  Far :AdaptGmail-remote:"[Gmail]/Trash"
  Near :AdaptGmail-local:trash

  Group AdaptGmail
  Channel AdaptGmail-inbox
  Channel AdaptGmail-sent
  Channel AdaptGmail-trash


  ##########################################################################
  # TCD (Disabled as auth2 and imap are tricky in office365 so far)
  ##########################################################################
  IMAPAccount TCD
  Host outlook.office365.com
  User lemagues@tcd.ie
  # AuthMechs XOAUTH2
  Port 993
  SSLType IMAPS
  PassCmd "python3 ~/.get_passwd.py 'outlook.office365.com' 'lemagues@tcd.ie'"
  # PassCmd "oauth2get tcd <account>" # mswvrbxrhjklbywm
  # CertificateFile /etc/ssl/certs/ca-bundle.crt

  IMAPStore TCD-remote
  Account TCD

  MaildirStore TCD-local
  Path ~/mail/TCD/
  Inbox ~/mail/TCD/INBOX
  SubFolders Legacy

  Channel TCD
  Far :TCD-remote:
  Near :TCD-local:
  Patterns "INBOX" "Deleted Items" "Sent Items"

  # ======================================================================================
  # ======================================================================================
  # ======================================================================================

  ##########################################################################
  # Coli Saarland
  ##########################################################################
  IMAPAccount Saarland
  Host mail.coli.uni-saarland.de
  User slemaguer
  PassCmd "python3 ~/.get_passwd.py 'mail.coli.uni-saarland.de' 'slemaguer'"
  Port 993
  SSLType IMAPS
  # CertificateFile /etc/ssl/certs/ca-bundle.crt

  IMAPStore Saarland-remote
  Account Saarland

  MaildirStore Saarland-local
  Path ~/mail/Saarland/
  Inbox ~/mail/Saarland/INBOX
  SubFolders Legacy

  Channel Saarland
  Far :Saarland-remote:
  Near :Saarland-local:
  Patterns "INBOX" *

#+end_src
* imapnotify
** TCD
#+begin_src js :tangle ~/.imapnotify/tcd.js :mkdirp yes
  var child_process = require('child_process');

  function getStdout(cmd) {
      var stdout = child_process.execSync(cmd);
      return stdout.toString().trim();
  }

  exports.host = "outlook.office365.com";
  exports.port = 993;
  exports.tls = true;
  exports.tlsOptions = { "rejectUnauthorized": false };
  exports.username = "lemagues@tcd.ie";
  exports.password = getStdout("python3 ~/.get_passwd.py 'outlook.office365.com' 'lemagues@tcd.ie'");
  exports.onNewMail = "mbsync -q TCD";
  exports.onNewMailPost = "~/environment/local/apps/emacs/bin/emacsclient  -e '(mu4e-update-index)'";
  exports.boxes = [ "INBOX" ];
#+end_src

** ADAPT Centre
#+begin_src js :tangle ~/.imapnotify/adapt.js
  var child_process = require('child_process');

  function getStdout(cmd) {
      var stdout = child_process.execSync(cmd);
      return stdout.toString().trim();
  }

  exports.host = "imap.gmail.com";
  exports.port = 993;
  exports.tls = true;
  exports.tlsOptions = { "rejectUnauthorized": false };
  exports.username = "sebastien.lemaguer@adaptcentre.ie";
  exports.password = getStdout("python3 ~/.get_passwd.py 'imap.gmail.com' 'sebastien.lemaguer@adaptcentre.ie'");
  exports.onNewMail = "mbsync -q AdaptGmail";
  exports.onNewMailPost = "~/environment/local/apps/emacs/bin/emacsclient  -e '(mu4e-update-index)'";
  exports.boxes = [ "INBOX" ];
#+end_src

** Saarland
#+begin_src js :tangle ~/.imapnotify/saarland.js
  var child_process = require('child_process');

  function getStdout(cmd) {
      var stdout = child_process.execSync(cmd);
      return stdout.toString().trim();
  }

  exports.host = "mail.coli.uni-saarland.de";
  exports.port = 993;
  exports.tls = true;
  exports.tlsOptions = { "rejectUnauthorized": false };
  exports.username = "slemaguer";
  exports.password = getStdout("python3 ~/.get_passwd.py 'mail.coli.uni-saarland.de' 'slemaguer'");
  exports.onNewMail = "mbsync -q Saarland";
  exports.onNewMailPost = "~/environment/local/apps/emacs/bin/emacsclient  -e '(mu4e-update-index)'";
  exports.boxes = [ "INBOX" ];
#+end_src

** GMAIL Bulk
#+begin_src js :tangle ~/.imapnotify/hikoseb.js
  var child_process = require('child_process');

  function getStdout(cmd) {
      var stdout = child_process.execSync(cmd);
      return stdout.toString().trim();
  }

  exports.host = "imap.gmail.com";
  exports.port = 993;
  exports.tls = true;
  exports.tlsOptions = { "rejectUnauthorized": false };
  exports.username = "hikoseb@gmail.com";
  exports.password = getStdout("python3 ~/.get_passwd.py 'imap.gmail.com' 'hikoseb@gmail.com'");
  exports.onNewMail = "mbsync -q HikoGmail";
  exports.onNewMailPost = "~/environment/local/apps/emacs/bin/emacsclient  -e '(mu4e-update-index)'";
  exports.boxes = [ "INBOX" ];
#+end_src

** GMAIL Less bulk
#+begin_src js :tangle ~/.imapnotify/sebgmail.js
  var child_process = require('child_process');

  function getStdout(cmd) {
      var stdout = child_process.execSync(cmd);
      return stdout.toString().trim();
  }

  exports.host = "imap.gmail.com";
  exports.port = 993;
  exports.tls = true;
  exports.tlsOptions = { "rejectUnauthorized": false };
  exports.username = "seb.lemaguer@gmail.com";
  exports.password = getStdout("python3 ~/.get_passwd.py 'imap.gmail.com' 'seb.lemaguer@gmail.com'");
  exports.onNewMail = "mbsync -q SebGmail";
  exports.onNewMailPost = "~/environment/local/apps/emacs/bin/emacsclient  -e '(mu4e-update-index)'";
  exports.boxes = [ "INBOX" ];
#+end_src

* COMMENT some extra configuration
